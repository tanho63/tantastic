% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny_timezone.R
\name{use_client_tz}
\alias{use_client_tz}
\alias{get_client_tz}
\title{Get User's Timezone (approximately)}
\usage{
use_client_tz(inputId = "_client_tz")

get_client_tz(
  inputId = "_client_tz",
  session = shiny::getDefaultReactiveDomain()
)
}
\arguments{
\item{inputId}{character string, name of shiny input. Defaults to "_client_tz".
When used in \code{use_client_tz}, may need to be namespaced if called within a module.}

\item{session}{a \code{shiny::session} object, defaults to \code{shiny::getDefaultReactiveDomain}}
}
\value{
\code{use_client_tz()}: HTML tags to be included in Shiny UI

\code{get_client_tz()} timezone string to be used by format, lubridate etc.
Note that Etc/GMT is inverted from the usual UTC string, so UTC-5 is equivalent Etc/GMT+5.
}
\description{
Uses some Javascript to pass the client's timezone to the Shiny session. This doesn't
actually find the client's timezone as much as it finds "how far are they from UTC",
but it's useful for giving an approximation that passes the smell test.
}
\examples{
if(interactive()){

shiny::shinyApp(
  ui = shiny::fluidPage(use_client_tz(), shiny::textOutput("time")),
  server = function(input, output, session) {
    # can be used outside of reactive context, if desired
    tz <- get_client_tz()
    output$time <- renderText(format(Sys.time(), format = "\%x \%X", tz = tz))
  }
)
}
}
\seealso{
\url{https://en.wikipedia.org/wiki/Tz_database#Area}

\url{https://stackoverflow.com/questions/24842229} from which this code is adapted
}
